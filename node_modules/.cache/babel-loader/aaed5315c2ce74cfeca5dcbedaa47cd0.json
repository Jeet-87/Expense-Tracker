{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prasenjit\\\\Desktop\\\\Web\\\\Expense-Tracker\\\\src\\\\components\\\\NewExpense\\\\ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = () => {\n  _s();\n\n  // const [eneteredTitle, setEnteredTitle] = useState('');\n  // const [enteredAmount, setEnteredAmount] = useState('');\n  // const [eneterdDate, setEneteredDate] = useState('')\n  const [userInput, setUserInput] = useState({\n    enteredTitle: '',\n    enteredAmount: '',\n    enteredDate: ''\n  });\n\n  const titleChangeHandler = event => {\n    // setEnteredTitle(event.target.value);\n    // setUserInput({\n    //     ...userInput, //Spread all the previous contents of form so that we dont loose the other two data we are not copying\n    //     enteredTitle: event.target.value\n    // });\n    setUserInput(prevState => {\n      //Safer way when there is a previous state coz react passes the latest state\n      return { ...prevState,\n        enteredTitle: event.target.value\n      };\n    });\n  };\n\n  const amountChangeHandler = event => {\n    // setEnteredAmount(event.target.value);\n    // setUserInput({\n    //     ...userInput,\n    //     enteredAmount: event.target.value\n    // });\n    setUserInput(prevState => {\n      return { ...prevState,\n        enteredAmount: event.target.value\n      };\n    });\n  };\n\n  const dateChangeHandler = event => {\n    // setEneteredDate(event.target.value);\n    setUserInput({ ...userInput,\n      enteredDate: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2019-01-01\",\n          max: \"2022-12-31\",\n          onChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ExpenseForm, \"wmXYPbKtbpwaOPXQRl1cSP80VGk=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["C:/Users/Prasenjit/Desktop/Web/Expense-Tracker/src/components/NewExpense/ExpenseForm.js"],"names":["React","useState","ExpenseForm","userInput","setUserInput","enteredTitle","enteredAmount","enteredDate","titleChangeHandler","event","prevState","target","value","amountChangeHandler","dateChangeHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,mBAAP;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEtB;AACA;AACA;AAEA,QAAK,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC;AACtCI,IAAAA,YAAY,EAAE,EADwB;AAEtCC,IAAAA,aAAa,EAAE,EAFuB;AAGtCC,IAAAA,WAAW,EAAE;AAHyB,GAAD,CAAzC;;AAMA,QAAMC,kBAAkB,GAAIC,KAAD,IAAW;AAClC;AAEA;AACA;AACA;AACA;AAEAL,IAAAA,YAAY,CAAEM,SAAD,IAAe;AAAoC;AAC5D,aAAO,EAAC,GAAGA,SAAJ;AAAeL,QAAAA,YAAY,EAAEI,KAAK,CAACE,MAAN,CAAaC;AAA1C,OAAP;AACH,KAFW,CAAZ;AAGH,GAXD;;AAaA,QAAMC,mBAAmB,GAAIJ,KAAD,IAAW;AACnC;AAEA;AACA;AACA;AACA;AAEAL,IAAAA,YAAY,CAAEM,SAAD,IAAe;AACxB,aAAO,EAAC,GAAGA,SAAJ;AAAeJ,QAAAA,aAAa,EAAEG,KAAK,CAACE,MAAN,CAAaC;AAA3C,OAAP;AACH,KAFW,CAAZ;AAGH,GAXD;;AAaA,QAAME,iBAAiB,GAAIL,KAAD,IAAW;AACjC;AACAL,IAAAA,YAAY,CAAC,EACT,GAAGD,SADM;AAETI,MAAAA,WAAW,EAAEE,KAAK,CAACE,MAAN,CAAaC;AAFjB,KAAD,CAAZ;AAIH,GAND;;AAUA,sBACI;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAEJ;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,GAAG,EAAC,MAAzB;AAAgC,UAAA,IAAI,EAAC,MAArC;AAA4C,UAAA,QAAQ,EAAEK;AAAtD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eASI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,GAAG,EAAC,YAAvB;AAAoC,UAAA,GAAG,EAAC,YAAxC;AAAqD,UAAA,QAAQ,EAAEC;AAA/D;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAeA;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,6BACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAfA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CArED;;GAAMZ,W;;KAAAA,W;AAuEN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = () => {\r\n\r\n    // const [eneteredTitle, setEnteredTitle] = useState('');\r\n    // const [enteredAmount, setEnteredAmount] = useState('');\r\n    // const [eneterdDate, setEneteredDate] = useState('')\r\n\r\n    const[userInput, setUserInput] = useState({\r\n        enteredTitle: '',\r\n        enteredAmount: '',\r\n        enteredDate: ''\r\n    });\r\n\r\n    const titleChangeHandler = (event) => {\r\n        // setEnteredTitle(event.target.value);\r\n\r\n        // setUserInput({\r\n        //     ...userInput, //Spread all the previous contents of form so that we dont loose the other two data we are not copying\r\n        //     enteredTitle: event.target.value\r\n        // });\r\n\r\n        setUserInput((prevState) => {                                   //Safer way when there is a previous state coz react passes the latest state\r\n            return {...prevState, enteredTitle: event.target.value}; \r\n        });\r\n    };\r\n\r\n    const amountChangeHandler = (event) => {\r\n        // setEnteredAmount(event.target.value);\r\n\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredAmount: event.target.value\r\n        // });\r\n\r\n        setUserInput((prevState) => {\r\n            return {...prevState, enteredAmount: event.target.value};\r\n        });\r\n    };\r\n\r\n    const dateChangeHandler = (event) => {\r\n        // setEneteredDate(event.target.value);\r\n        setUserInput({\r\n            ...userInput,\r\n            enteredDate: event.target.value\r\n        });\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <form>\r\n        <div className=\"new-expense__controls\">\r\n            <div className=\"new-expense__control\">\r\n                <label>Title</label>\r\n                <input type='text' onChange={titleChangeHandler} />\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label>Amount</label>\r\n                <input type='number' min=\"0.01\" step=\"0.01\" onChange={amountChangeHandler} />\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label>Date</label>\r\n                <input type='date' min=\"2019-01-01\" max=\"2022-12-31\" onChange={dateChangeHandler} />\r\n            </div>\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n            <button type='submit'>Add Expense</button>\r\n        </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ExpenseForm\r\n"]},"metadata":{},"sourceType":"module"}